name: Padavan工具链手动云编译

on:
  workflow_dispatch:
    inputs:
      cloneurl:
        description: 设置源码地址：
        default: "https://github.com/ElemenTP/rt-n56u.git"
        required: false
      branch:
        description: 设置源码分支：
        default: "master"
        required: false

env:
  IMAGES: /opt/images
  RT_N56U: /opt/rt-n56u

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: 同步主存储库
      uses: actions/checkout@master
    - name: 初始环境设置
      run: |
        sudo apt-get update
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin > /dev/null
    - name: 下载源码
      run: |
        echo "DATE=$(TZ='Asia/Shanghai' date '+%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        echo "NAME=Toolchain-${{ github.event.inputs.production }}" >> $GITHUB_ENV
        mkdir -p $IMAGES
        echo 开始编译时间： >> $IMAGES/readme.txt
        TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S' >> $IMAGES/readme.txt
        git clone --depth=1 ${{ github.event.inputs.cloneurl }} --branch=${{ github.event.inputs.branch }} $RT_N56U > /dev/null
    - name: 开始编译
      run: |
        cd $RT_N56U/toolchain-mipsel
        bash build_toolchain
        tar -Jcvf $IMAGES/mipsel-linux-uclibc.tar.xz toolchain-3.4.x
    - name: 收集信息
      run: |
        cd $IMAGES
        echo 完成编译时间： >> readme.txt
        TZ='Asia/Shanghai'  date  '+%Y-%m-%d %H:%M:%S' >> readme.txt
        echo >> readme.txt
        echo 源码信息： >> readme.txt
        pushd $RT_N56U
        git ls-remote --get-url origin >> $IMAGES/readme.txt
        git log --shortstat >> $IMAGES/readme.txt
        popd
        echo >> readme.txt
        echo md5校验值： >> readme.txt
        md5sum mipsel-linux-uclibc.tar.xz >> readme.txt || echo
        ls -l
    - name: 上传工具链包到Artifacts
      if: ${{true}}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: ${{ env.IMAGES }}
